Version 1
SubGoalCombiner SGC_AND
INITSECTION
// Scroll GUID, level (not rank), arcane, divine, occult, primal
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_AcidArrow_0fa4bdab-9ef1-4575-b063-b3e9d359d593, 2, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Aid_3e85f140-2284-430b-b11f-2126cd85b567, 1, 0, 1, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_AnimalFriendship_3d992632-dc98-43b1-85e5-b59ba5a6aa9a, 1, 0, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_AnimateDead_8b9b4657-93f3-4382-b6e0-a587902abcba, 1, 1, 1, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_ArcaneEye_DONOTUSE_5314d1eb-5771-47b5-80a7-2ee093ef4618, 4, 1, 1, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_ArcaneLock_05da1a09-2d22-4299-b4a0-c4538a91f91c, 2, 1, 1, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Banishment_82719943-71e0-4eb2-bc4f-c8c0dd02c47c, 4, 1, 1, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_BestowCurse_48fbab09-ede1-4093-9223-38c9e172c061, 3, 1, 1, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_BlackTentacles_e9fae419-8c7a-4d5d-950f-94675a2aff07, 5, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Blight_e0ee9263-3740-44fe-80da-4315cb836aef, 2, 0, 1, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Blindness_2c6caac0-1684-4324-abba-0b849a9add74, 3, 1, 1, 1, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Blink_d3800e05-635f-47b3-80b1-1a7c4161cf89, 4, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Blur_a8b34fd5-d643-49ad-98d3-d5841492b338, 2, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_BurningHands_bc00df72-3c98-4bf2-9650-28e08f79b57c, 1, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_ChainLightning_13105f7d-55fa-4292-abfe-b9d80054b48e, 6, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_CharmPerson_2315f935-a188-4665-9ae0-986c7a9b0021, 1, 1, 0, 1, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_ChillTouch_79faf049-d503-46eb-a018-69e1975777d7, 1, 1, 1, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_ChromaticOrb_c6aef37e-bc4d-46e7-a963-15b4cd8163bd, 1, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_ChromaticOrb_d338fcb9-aaf5-48b1-8333-2dd4d9f70e1b, 1, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_CircleOfDeath_ad31110a-aa9a-4427-925a-9952bfbef45a, 6, 1, 1, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Cloudkill_0e793d2d-1cd7-4b90-a71b-821423e50969, 5, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_CloudOfDaggers_33421d4f-1cac-4196-a85e-0b07bcb3ecf2, 2, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_ColorSpray_c7c92bc3-e856-4403-b509-9b0491f455cd, 1, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_ConeOfCold_e81e7b31-8e7a-4fc1-977d-9a9a58fdd4a0, 5, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Confusion_7634cc33-d16b-4640-ba7c-8c6a26653591, 4, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_ConjureElemental_c0e92dfa-29cf-46e8-8b35-8bded679df64, 5, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_ConjureMinorElemental_a30864e5-06f0-4d14-9ea4-cb6870c0ddfe, 4, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_CrownOfMadness_701a7df0-728e-494a-ab2f-146aed4e8c7f, 2, 0, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Darkness_caa812b9-9362-4c38-aef0-e3f6eb288dba, 2, 1, 1, 1, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Darkvision_0d737a55-c337-4e8f-b31f-a17273099013, 2, 1, 1, 1, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_DetectThoughts_126cc673-1151-4113-b1bf-98457233441b, 3, 1, 1, 1, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_DimensionDoor_75452ba5-5758-417c-b661-8832eb64df66, 4, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_DisguiseSelf_b3376ca4-393c-4191-aa67-a02c94d6a236, 1, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Disintegrate_3f737706-57ca-45e6-b0d1-45238da76329, 6, 1, 0, 0, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_DispelMagic_DONOTUSE_bc5c0bcf-144f-46ed-bcde-e6bd1225efb9, 2, 1, 1, 1, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_DominatePerson_3b447e07-3e73-4906-9f7e-63a87e2da909, 6, 1, 1, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Enlarge_7c4c3ae1-26ac-4765-a5d5-586976e0e458, 2, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_ExpeditiousRetreat_eedf0539-6a47-480e-8b23-a133b222241f, 1, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Eyebite_cecb1802-b2c0-4d65-aa08-aa15ca3619eb, 6, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_FalseLife_7d76665a-3b9e-4495-a3c6-a05340704194, 2, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Fear_4cdb2434-0ffa-4fb1-9c42-d6451978f35b, 3, 1, 1, 1, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_FeatherFall_82cbfcd2-cf80-4acd-9f1f-51835693b0e6, 1, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_FeignDeath_6e13fbf8-3db5-4420-8691-653d5ecb753e, 3, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_FindFamiliar_fb975b01-40d5-49a3-b60a-d2f13a1f8009, 1, 0, 1, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Fireball_79d2bb95-53fc-4e41-a004-5e1b83db8de7, 3, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_FireBolt_fdfe5d75-0e8b-47f8-b128-d57081cb8981, 1, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_FireShield_Chill_DONOTUSE_5d2e1c40-e85e-4027-aefe-b9731a2de2c9, 4, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_FireShield_Warm_6b87f7b4-441c-41cf-92c3-29e258747454, 4, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_FlameBlade_a6d216e9-c9e9-4310-b155-0e4f50682377, 2, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_FlamingSphere_0922de82-149f-4cac-aa98-e26222fd7714, 1, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_FleshToStone_a9135751-3a8a-4070-9f3a-11d24d123a3f, 3, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Fly_1df15994-c860-4930-beed-3135b74025fa, 4, 1, 1, 1, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_FogCloud_dcb51bec-90bd-4d0a-942d-72034782bdf5, 2, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_FreezingSphere_74d0e4f0-de97-4097-a7e7-f5759a375c81, 6, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_GaseousForm_4c026e53-4000-4818-913c-a5662ee7c061, 3, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_GlobeOfInvulnerability_8d4c06d1-e504-49b0-a4fa-5179ab717f1e, 6, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_GlyphOfWarding_056f10e1-01e7-4622-907f-faad8d48bbe6, 3, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Goodberry_dff353d0-c1d4-43af-8664-bf08a9ffae07, 1, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Grease_094c9b7f-0b7d-4813-92ea-7267afb62b07, 1, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_GustOfWind_6bedf433-994f-4624-bb2a-cdf6f46d539a, 1, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Haste_96d4aba5-bd76-4bae-a726-37a6c96776ab, 3, 1, 0, 1, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_HideousLaughter_8bc1a0d8-af28-45b2-b1ca-1f15e3c47b1b, 1, 0, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_HoldMonster_d621c19f-d5c8-433c-bc75-7f2eb87d2f0a, 3, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_HoldPerson_5e077657-8b5e-4e69-ae2e-95eab691fa41, 3, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_HypnoticPattern_bdf15fb0-d9df-4509-ad70-42b5fad11971, 3, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_IceKnife_f26320fa-9a25-4f79-80fc-e356268cf474, 2, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_IceStorm_e8c3ad4e-37f0-46c8-bf25-0ddc2dcb0139, 4, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Invisibility_6ed22182-90a6-418a-8aa7-909b9e77aa47, 2, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Invisibility_Greater_795e4282-27c3-4177-b532-9e6559a26531, 4, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_IrresistibleDance_3c8db4fb-c10b-415d-b9cd-c3254265b778, 6, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Jump_e1f15103-bb95-476f-8b09-091f51b2f645, 1, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Knock_4c1a886a-7db5-4e00-bbc6-d4243534f057, 2, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_LightningBolt_83600284-8f78-409f-a0e0-d262b2bdea64, 3, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Longstrider_82370a33-5243-4fad-9880-b0a8c2b5a225, 1, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_MageArmor_2ccab07d-0ccb-45e6-8f43-8ffb6a62da11, 1, 1, 1, 1, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_MagicMissile_945cd4f0-991b-4663-b72e-790d49fee27e, 1, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_MagicWeapon_ccf1bd99-e807-44e6-9a0a-7645ad533a8f, 1, 1, 1, 1, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_MirrorImage_019d8804-56ee-44eb-959a-db5377cda8ae, 2, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_MistyStep_9a2a3fcc-d948-4463-b88b-a9d61b77b015, 3, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_PhantasmalForce_2eb2147d-5bcb-4b0e-ac73-b2a4d1deeb77, 2, 0, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_PhantasmalKiller_3b802734-ad6e-45a4-988b-f7241636e5e9, 4, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_PlanarBinding_6ac3b9ab-fdb4-47e8-8a35-91747de2afc8, 5, 0, 1, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Polymorph_389da9ab-bee7-447c-9bed-f1021ddc94d4, 5, 0, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_ProtectionFromEnergy_9f8502bf-727f-40c7-93a3-5fab6ba2e2f5, 2, 1, 1, 1, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_ProtectionFromEvilAndGood_03771ebc-83ca-45d2-8bd5-d382b6d6d824, 1, 0, 1, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_RayOfEnfeeblement_cd1da9c5-c9ea-4d2a-93ce-e201c97eded9, 1, 1, 1, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_RayOfFrost_f6cbfbb3-7eab-4f78-afde-073756c4e26d, 1, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_RayOfSickness_22ef638a-206f-4874-8f68-e2a378df1158, 3, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_RemoveCurse_dea31400-25e5-4e69-bb76-14430fe46673, 2, 0, 1, 1, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_ResilientSphere_f5bf39c0-2df3-4cd4-842c-c1862e6f80aa, 4, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_ScorchingRay_577a83c9-0bb7-4670-b0e9-d9a4738f6a0a, 2, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_SeeInvisibility_2e7fc397-cb84-4573-b6c7-1c7a8f2742d6, 2, 1, 1, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Seeming_d2573c9b-6de2-45bd-8032-b8a59432f4b5, 5, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Shatter_2ad118cb-b11f-45ca-a206-7575bbbaccc6, 2, 0, 0, 1, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_ShockingGrasp_a9ced623-a25d-4d2b-bca5-644b7230c869, 1, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Sleep_2ce88bf0-fe06-46bd-b71e-18bc6dc8eb9d, 1, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_SleetStorm_be05f7d0-ffa0-46e3-a0d6-66e3333159f1, 4, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Slow_4c990ca3-01f6-4536-b8f3-c26cd9a0ca8b, 3, 1, 0, 1, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_SpeakWithDead_36d01b98-1702-4d00-81a9-1b8469dd67a5, 1, 0, 1, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_StinkingCloud_0f0a7a12-1c77-423a-b16e-4a9a5480c05e, 3, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Stoneskin_7f39977f-bcab-4dda-933f-bd70cb333ecc, 4, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_SummonQuasit_f912ea9b-0e2f-45b4-b12d-fa6ec89dc758, 1, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Sunbeam_049d70c4-7ea3-4b6c-af6f-44dab7813a89, 3, 0, 1, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Telekinesis_1d5ecaca-310b-4622-b302-81331c0a8e9e, 1, 1, 0, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Thunderwave_94caa680-50b8-46b1-b775-19150d783b2f, 1, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_TrueResurrection_01d1b2b2-9e6b-4ad2-8d63-59f9caf1d389, 10, 1, 1, 1, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_VampiricTouch_6fd2d3d4-801c-4591-9c05-db8a68e51808, 3, 1, 1, 1, 0);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_WallOfFire_0f3c7369-d0bd-4b97-960d-1407f4c8eebf, 4, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_WallOfIce_e7dc56bc-b169-4a46-b8ee-cc6474dd7b15, 5, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_WallOfStone_d13587f4-a1f4-4833-bd1e-da1c7951d680, 5, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_Web_2eedb4ac-47fa-4039-9684-8b4bb0923a26, 2, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)LOOT_SCROLL_WitchBolt_e69f52a4-3d86-4f08-a9b4-c70ba4cc3070, 1, 1, 0, 0, 1);
DB_SpellScroll((GUIDSTRING)UNI_LOW_SorcerousSundries_BestialCommunionScroll_b627f83f-8533-4440-95a0-ad2f319fe4ed, 5, 0, 1, 0, 0);
DB_SpellScroll((GUIDSTRING)UNI_LOW_SorcerousSundries_CurriculumOfStrategyScroll_21e67b0e-913d-411a-9046-6c54e8d0bf53, 5, 1, 0, 0, 0);
DB_SpellScroll((GUIDSTRING)UNI_LOW_SorcerousSundries_DethroneScroll_b2e1168a-021d-4a81-a041-6d2e1421a1fb, 5, 0, 0, 1, 0);

DB_SpellScrollDifficulties(0, 13);
DB_SpellScrollDifficulties(1, 14);
DB_SpellScrollDifficulties(2, 15);
DB_SpellScrollDifficulties(3, 16);
DB_SpellScrollDifficulties(4, 17);
DB_SpellScrollDifficulties(5, 18);
DB_SpellScrollDifficulties(6, 19);
DB_SpellScrollDifficulties(7, 20);
DB_SpellScrollDifficulties(8, 21);
DB_SpellScrollDifficulties(9, 22);
DB_SpellScrollDifficulties(10, 23);
KBSECTION
// Whenever an item is used, check if it is in our scroll DB and if the character has Trick Magic
// Item active. If they already tried to TMI this scroll, we don't need to make the check.
// We must also skip the check if the item in question is already within their tradition.
// If all that was successful, grab the DC for the scroll and work out what the best skill is for
// the character to use to try to trick the item, based on what traditions the scroll has.
IF
RequestCanUse((CHARACTER)_Character, (ITEM)_Item, _)
AND
GetTemplate((GUIDSTRING)_Item, (GUIDSTRING)_RootTemplate)
AND
HasActiveStatus(_Character, "TRICK_MAGIC_ITEM", 1)
AND
NOT DB_TMISuccess(_Character, (GUIDSTRING)_Item)
AND
NOT DB_TMIFail(_Character, (GUIDSTRING)_Item)
AND
NOT DB_TMIBlock(_Character, (GUIDSTRING)_Item)
AND
DB_SpellScroll(_RootTemplate, (INTEGER)_Level, (INTEGER)_Arcane, (INTEGER)_Divine, (INTEGER)_Occult, (INTEGER)_Primal)
AND
HasPassive(_Character, "Tradition_Arcane", (INTEGER)_ArcanePassive)
AND
HasPassive(_Character, "Tradition_Divine", (INTEGER)_DivinePassive)
AND
HasPassive(_Character, "Tradition_Occult", (INTEGER)_OccultPassive)
AND
HasPassive(_Character, "Tradition_Primal", (INTEGER)_PrimalPassive)
AND
IntegerMin(_ArcanePassive, _Arcane, (INTEGER)_ArcaneCanCast)
AND
_ArcaneCanCast < 1
AND
IntegerMin(_DivinePassive, _Divine, (INTEGER)_DivineCanCast)
AND
_DivineCanCast < 1
AND
IntegerMin(_OccultPassive, _Occult, (INTEGER)_OccultCanCast)
AND
_OccultCanCast < 1
AND
IntegerMin(_PrimalPassive, _Primal, (INTEGER)_PrimalCanCast)
AND
_PrimalCanCast < 1
AND
DB_SpellScrollDifficulties(_Level, (INTEGER)_Difficulty)
AND
CalculatePassiveSkill(_Character, "Arcana", (INTEGER)_ArcaneSkill)
AND
CalculatePassiveSkill(_Character, "Insight", (INTEGER)_DivineSkill)
AND
CalculatePassiveSkill(_Character, "Investigation", (INTEGER)_OccultSkill)
AND
CalculatePassiveSkill(_Character, "AnimalHandling", (INTEGER)_PrimalSkill)
AND
IntegerProduct(_ArcaneSkill, _Arcane, (INTEGER)_ArcaneAdjusted)
AND
IntegerProduct(_DivineSkill, _Divine, (INTEGER)_DivineAdjusted)
AND
IntegerProduct(_OccultSkill, _Occult, (INTEGER)_OccultAdjusted)
AND
IntegerProduct(_PrimalSkill, _Primal, (INTEGER)_PrimalAdjusted)
AND
IntegerMax(_ArcaneAdjusted, _DivineAdjusted, (INTEGER)_MaxSkillStep1)
AND
IntegerMax(_MaxSkillStep1, _OccultAdjusted, (INTEGER)_MaxSkillStep2)
AND
IntegerMax(_MaxSkillStep2, _PrimalAdjusted, (INTEGER)_MaxSkill)
AND
_MaxSkill > 0
THEN
PROC_TriggerBestTMICheck("TRICK_MAGIC_ITEM_ARCANE_CHECK", _ArcaneAdjusted, _MaxSkill, _Difficulty, _Character, _Item, "TMIArcaneCheck");
PROC_TriggerBestTMICheck("TRICK_MAGIC_ITEM_DIVINE_CHECK", _DivineAdjusted, _MaxSkill, _Difficulty, _Character, _Item, "TMIDivineCheck");
PROC_TriggerBestTMICheck("TRICK_MAGIC_ITEM_OCCULT_CHECK", _OccultAdjusted, _MaxSkill, _Difficulty, _Character, _Item, "TMIOccultCheck");
PROC_TriggerBestTMICheck("TRICK_MAGIC_ITEM_PRIMAL_CHECK", _PrimalAdjusted, _MaxSkill, _Difficulty, _Character, _Item, "TMIPrimalCheck");
NOT DB_CheckAlreadyMade(1);

PROC
PROC_TriggerBestTMICheck((STRING)_SkillStatus, (INTEGER)_SkillScore, (INTEGER)_RequiredScore, (INTEGER)_Difficulty, (CHARACTER)_Character, (GUIDSTRING)_Item, (STRING)_Reference)
AND
_SkillScore == _RequiredScore
AND
NOT DB_CheckAlreadyMade(1)
THEN
DB_CheckAlreadyMade(1);
DB_TMIRequest(_Character, _Item);
PROC_RequestSkillCheckStatus(_SkillStatus, _Difficulty, _Character, _Reference);
RemoveStatus(_Character, "TRICK_MAGIC_ITEM");

// If the TMI roll succeeded (crits don't matter), approve the request, and grant a status that let's
// us use the scroll without a check going forwards, in case we cancel the cast.
IF
StatusApplied((CHARACTER)_Character, "TRICK_MAGIC_ITEM_SUCCESS", _, _)
AND
DB_TMIRequest(_Character, (GUIDSTRING)_Item)
THEN
ApplyStatus(_Character, "TRICK_MAGIC_ITEM_PERMIT", 6.0, 0, _Item);
DB_TMISuccess(_Character, _Item);
NOT DB_TMIRequest(_Character, _Item);

// If the player loses the Trick Magic Item Permit status, remove that item from the success DB.
// This essentially allows us to not worry about whether or not we're in turn-based.
IF
StatusRemoved((GUIDSTRING)_Character, "TRICK_MAGIC_ITEM_PERMIT", _, _)
AND
DB_TMISuccess((CHARACTER)_Character, (GUIDSTRING)_Item)
THEN
NOT DB_TMISuccess(_Character, _Item);

// If the TMI roll failed, reject the request, and move a tint distance to cancel the cast.
IF
StatusApplied((CHARACTER)_Character, "TRICK_MAGIC_ITEM_FAIL", _, _)
AND
DB_TMIRequest(_Character, (GUIDSTRING)_Item)
AND
GetPosition(_Character, _X, _Y, _Z)
AND
RealSum(_X, 0.01, _NewX)
THEN
NOT DB_TMIRequest(_Character, _Item);
CharacterMoveToPosition(_Character, _NewX, _Y, _Z, "Walk", "TMI_Cancelled");
ApplyStatus(_Character, "TRICK_MAGIC_ITEM_DENY", 6.0, 0, _Item);
DB_TMIFail(_Character, _Item);

// If the player loses the Trick Magic Item Deny status, remove that item from the fail DB.
// This essentially allows us to not worry about whether or not we're in turn-based.
IF
StatusRemoved((GUIDSTRING)_Character, "TRICK_MAGIC_ITEM_DENY", _, _)
AND
DB_TMIFail((CHARACTER)_Character, (GUIDSTRING)_Item)
THEN
NOT DB_TMIFail(_Character, _Item);

// If the TMI roll crit failed, reject the request, and drop the scroll on the
// floor, and give us a status to block it until our next long rest.
IF
StatusApplied((CHARACTER)_Character, "TRICK_MAGIC_ITEM_CRIT_FAIL", _, _)
AND
DB_TMIRequest(_Character, (GUIDSTRING)_Item)
THEN
NOT DB_TMIRequest(_Character, _Item);
DB_TMIBlock(_Character, _Item);
ApplyStatus(_Character, "TRICK_MAGIC_ITEM_BLOCK", -1.0, 0, _Item);
PROC_DropScroll(_Item);

PROC
PROC_DropScroll((GUIDSTRING)_Item)
THEN
Drop((ITEM)_Item);

// Clear out the TMI crit fail DB after a long rest
IF
LongRestFinished()
AND
DB_Players((CHARACTER)_Character)
AND
DB_TMIBlock(_Character, (GUIDSTRING)_Item)
THEN
NOT DB_TMIBlock(_Character, _Item);
RemoveStatus(_Character, "TRICK_MAGIC_ITEM_BLOCK");
EXITSECTION

ENDEXITSECTION
